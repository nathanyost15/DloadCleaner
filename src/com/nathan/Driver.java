/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nathan;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import com.nathan.cleaner.Cleaner;

/**
 *
 * @author natha
 */
public class Driver extends javax.swing.JFrame 
{
	private JButton addPathButton;
    private JButton cleanButton;
    private JPanel cleanerPanel;
    private JButton deletePathButton;
    private JList<String> pathList;
    private JScrollPane pathListPane;
    private Cleaner cleaner;
    
    /**
     * Creates new form Cleaner
     */
    public Driver() {
    	cleaner = new Cleaner();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() 
    {
        cleanerPanel = new javax.swing.JPanel();
        pathListPane = new javax.swing.JScrollPane();
        pathList = new javax.swing.JList();
        addPathButton = new javax.swing.JButton();
        deletePathButton = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        

        
        pathListPane.setViewportView(pathList);

        addPathButton.setText("Add Path");
        addPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPathButtonActionPerformed(evt);
            }
        });
        

        deletePathButton.setText("Delete Path");
        deletePathButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent evt)
        	{
        		deletePathButtonActionPerformed(evt);
        	}
        });

        cleanButton.setText("Clean");
        cleanButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent evt)
        	{
        		cleanButtonActionPerformed(evt);
        	}
        });
        
        javax.swing.GroupLayout cleanerPanelLayout = new javax.swing.GroupLayout(cleanerPanel);
        cleanerPanel.setLayout(cleanerPanelLayout);
        cleanerPanelLayout.setHorizontalGroup(
            cleanerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cleanerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(cleanerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cleanerPanelLayout.createSequentialGroup()
                        .addComponent(addPathButton)
                        .addGap(118, 118, 118)
                        .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletePathButton))
                    .addComponent(pathListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        cleanerPanelLayout.setVerticalGroup(
            cleanerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cleanerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pathListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cleanerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cleanerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deletePathButton)
                        .addComponent(addPathButton))
                    .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cleanerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cleanerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        this.setLocationRelativeTo(null);
        this.setResizable(false);        
    }// </editor-fold>                        

    private void addPathButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JFileChooser chooser = new JFileChooser();        
        chooser.setCurrentDirectory(new File("."));
        chooser.setDialogTitle("Select directory");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        
        // Check to see if the user selected open or cancelled.
        int approved = chooser.showDialog(pathList, null);
        
        // If user selected open then save to list.
        if(approved == JFileChooser.APPROVE_OPTION)
        {
	        File f = chooser.getSelectedFile();
	        if(f != null)
	        {
	        	cleaner.add(f.getAbsolutePath());
	        	pathList.setListData(cleaner.getPaths());
	        }
        }
    }      
    
    private void deletePathButtonActionPerformed(ActionEvent evt)
    {
    	if(pathList.isSelectionEmpty())
    	{
    		System.err.println("Selection is empty!");
    		return;
    	}
    	else
    	{
    		List<String> paths = pathList.getSelectedValuesList();
    		paths.stream().forEach(path -> cleaner.remove(path));
    		pathList.setListData(cleaner.getPaths());
    	}    	
    }
    
    private void cleanButtonActionPerformed(ActionEvent evt)
    {
    	if(cleaner.getPaths().length != 0)
    		cleaner.clean(30);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Driver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Driver().setVisible(true);
            }
        });
    }
                  
}
